% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_boxplot_av.R
\name{tm_g_boxplot_av}
\alias{tm_g_boxplot_av}
\title{Function to create a box plot without visit facetting. Presents all visit data based on analysis day.}
\usage{
tm_g_boxplot_av(
  label,
  dataname,
  param_var,
  param_choices = param,
  param,
  yaxis_var = "AVAL",
  yaxis_var_choices = c("AVAL", "CHG"),
  xaxis_var = "AVISITCD",
  xaxis_var_choices = NULL,
  facet_var = "ARM",
  facet_var_choices = NULL,
  filter_vars = c("BASE2", "BASE"),
  filter_labs = c("Screening", "Baseline"),
  trt_group = "ARM",
  color_manual = NULL,
  shape_manual = NULL,
  hline = NULL,
  facet_ncol = NULL,
  rotate_xlab = FALSE,
  pre_output = NULL,
  post_output = NULL,
  armlabel = NULL,
  plot_height = c(600, 200, 2000),
  code_data_processing = NULL
)
}
\arguments{
\item{label}{menu item label of the module in the teal app.}

\item{dataname}{analysis data passed to the data argument of teal init. E.g. ADaM structured
laboratory data frame ADLB.}

\item{param_var}{name of variable containing biomarker codes e.g. PARAMCD.}

\item{param_choices}{list of biomarkers of interest.}

\item{param}{biomarker selected.}

\item{yaxis_var}{name of variable containing biomarker results displayed on y-axis e.g. AVAL.}

\item{yaxis_var_choices}{list of variables containing biomarker results choices.}

\item{xaxis_var}{variable to categorize the x-axis.}

\item{xaxis_var_choices}{variable choices with which to categorize x-axis.}

\item{facet_var}{variable to facet the plots by.}

\item{facet_var_choices}{variable choices with which to facet the plots.}

\item{filter_vars}{variables to be used for filtering the data.  The default is BASE2 and BASE}

\item{filter_labs}{labels for the radio buttons for the \code{filter_vars}. The defaults are
"Screening" for BASE2 and "Baseline" for BASE.}

\item{trt_group}{name of variable representing treatment group e.g. ARM.}

\item{color_manual}{vector of colors applied to treatment values.}

\item{shape_manual}{vector of symbols applied to LOQ values.}

\item{hline}{y-axis value to position a horizontal line.  NULL = No line.}

\item{facet_ncol}{numeric value indicating number of facets per row.}

\item{rotate_xlab}{45 degree rotation of x-axis values.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{post_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{armlabel}{label for the treatment symbols in the legend. If not specified then the label
attribute for trt_group will be used. If there is no label attribute for trt_group, then the
name of the parameter (in title case) will be used.}

\item{plot_height}{numeric vectors to define the plot height.}

\item{code_data_processing}{TODO}
}
\value{
an \code{\link[teal]{module}} object#'
}
\description{
This teal module renders the UI and calls the functions that create a box plot and accompanying
summary table.
}
\examples{

\dontrun{

# Example using ADaM structure analysis dataset.

library(random.cdisc.data)

# original ARM value = dose value
arm_mapping <- list("A: Drug X" = "150mg QD",
                    "B: Placebo" = "Placebo",
                    "C: Combination" = "Combination")

ADSL <- radsl(N = 20, seed = 1)
ADLB <- radlb(ADSL, visit_format = "WEEK", n_assessments = 7L, seed = 2)
ADLB <- ADLB %>%
  mutate(AVISITCD = case_when(
    AVISIT == "SCREENING" ~ "SCR",
    AVISIT == "BASELINE" ~ "BL",
    grepl("WEEK", AVISIT) ~ paste("W", stringr::str_extract(AVISIT, "(?<=(WEEK ))[0-9]+")),
    TRUE ~ as.character(NA)),
    AVISITCDN = case_when(
      AVISITCD == "SCR" ~ -2,
      AVISITCD == "BL" ~ 0,
      grepl("W", AVISITCD) ~ as.numeric(gsub("[^0-9]*", "", AVISITCD)),
      TRUE ~ as.numeric(NA)),
    TRTORD = case_when(
      ARMCD == "ARM C" ~ 1,
      ARMCD == "ARM B" ~ 2,
      ARMCD == "ARM A" ~ 3),
    ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
    ARM = factor(ARM) %>% reorder(TRTORD),
    ADY = AVISITCDN)


x <- teal::init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL),
    cdisc_dataset("ADLB", ADLB),
    code = {'
      arm_mapping <- list("A: Drug X" = "150mg QD",
                          "B: Placebo" = "Placebo",
                          "C: Combination" = "Combination")

      ADSL <- radsl(N = 20, seed = 1)
      ADLB <- radlb(ADSL, visit_format = "WEEK", n_assessments = 7L, seed = 2)
      ADLB <- ADLB %>%
        mutate(AVISITCD = case_when(
            AVISIT == "SCREENING" ~ "SCR",
            AVISIT == "BASELINE" ~ "BL",
            grepl("WEEK", AVISIT) ~ paste("W", stringr::str_extract(AVISIT, "(?<=(WEEK ))[0-9]+")),
            TRUE ~ as.character(NA)),
          AVISITCDN = case_when(
            AVISITCD == "SCR" ~ -2,
            AVISITCD == "BL" ~ 0,
            grepl("W", AVISITCD) ~ as.numeric(gsub("[^0-9]*", "", AVISITCD)),
            TRUE ~ as.numeric(NA)),
          TRTORD = case_when(
            ARMCD == "ARM C" ~ 1,
            ARMCD == "ARM B" ~ 2,
            ARMCD == "ARM A" ~ 3),
          ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
          ARM = factor(ARM) %>% reorder(TRTORD),
          ADY = AVISITCDN)
          '},
    check = FALSE
  ),
  modules = root_modules(
      tm_g_boxplot_av(
        label = "Box Plot",
        dataname = "ADLB",
        param_var = "PARAMCD",
        param_choices = c("ALT", "CRP", "IGA"),
        param = "ALT",
        yaxis_var = "AVAL",
        yaxis_var_choices = c("AVAL", "BASE", "CHG"),
        rotate_xlab = FALSE,
        xaxis_var = "ACTARM",
        xaxis_var_choices = c("ACTARM", "ADY", "AVISITCD", "STUDYID"),
        facet_var= "ADY",
        facet_var_choices = c("ACTARM", "ADY", "AVISITCD", "SEX", "STUDYID"),
        trt_group = "ACTARM"
      )
  )
)
shinyApp(x$ui, x$server)

}
}
\author{
Jeff Tomlinson (tomlinsj) jeffrey.tomlinson@roche.com

Balazs Toth (tothb2) toth.balazs@gene.com
}
