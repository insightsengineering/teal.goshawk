% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toggable_slider.R
\name{toggle_slider_ui}
\alias{toggle_slider_ui}
\title{UI with a toggable slider to change between slider and numeric input fields}
\usage{
toggle_slider_ui(
  id,
  label,
  min,
  max,
  value,
  slider_initially = TRUE,
  step_slider = NULL,
  step_numeric = step_slider,
  width = NULL,
  ...
)
}
\arguments{
\item{id}{\code{character} module id}

\item{label}{\code{label} label for input field, e.g. slider or numeric inputs}

\item{min}{\verb{numeric or integer} minimum value}

\item{max}{\verb{numeric or integer} maximum value}

\item{value}{\verb{numeric or integer} either of length 1 for normal slider or of
length 2 for dichotomous slider.}

\item{slider_initially}{\code{logical} whether to show slider or numeric fields
initially}

\item{step_slider}{\verb{numeric or integer} step for slider}

\item{step_numeric}{\verb{numeric or integer} step for numeric input fields}

\item{width}{\code{numeric} width of slider or of each numeric field}

\item{...}{additional parameters to pass to \code{sliderInput}}
}
\value{
Shiny HTML UI
}
\description{
This is useful when a slider should be shown, but it is sometimes hard to configure sliders,
so one can toggle to one or two numeric input fields to set slider instead.
Both normal sliders (for a single number in a range) and dichotomous sliders (for a range
within the slider range) are supported. In the former case, the toggle button
will show one numeric input field, in the latter case two.
}
\details{
Value is not checked to be within minmax range
}
\examples{
value <- c(20.3, 81.5) # dichotomous slider
# value <- c(50.1) # normal slider
shinyApp(
  ui = div(
    teal.goshawk:::toggle_slider_ui("toggle_slider", "Select value", min = 0.2, max = 100.1, value = value, slider_initially = FALSE, step_slider = 0.1, step_numeric = 0.001),
    verbatimTextOutput("value")
  ),
  server = function(input, output, session) {
    is_dichotomous_slider <- (length(value) == 2)
    range_value <- callModule(toggle_slider_server, "toggle_slider", is_dichotomous_slider = is_dichotomous_slider)
    messages <- reactiveVal() # to keep history
    observeEvent(range_value$state(), {
      list_with_names_str <- function(x) paste(names(x), x, sep = ": ", collapse = ", ")
      messages(c(messages(), list_with_names_str(range_value$state())))
    })
    output$value <- renderText({
      paste(messages(), collapse = "\n")
    })

    # for stress-testing example, update slider settings
    # bug with invalidateLater not working inside `observeEvent`
    # observe({
    #   invalidateLater(1000, session)
    #   a <- sample(0:100, 1) # for range
    #   b <- sample(0:100, 1)
    #   isolate(do.call(
    #     range_value$update_state,
    #     list(
    #       value = sort(sample(0:100, if (is_dichotomous_slider) 2 else 1)),
    #       min = min(a, b), max = max(a, b),
    #       step = sample(1:20, 1) / 10
    #     )[sample(1:4, sample(4, 1))] # select up to four fields from the list
    #   ))
    # })
  }
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
