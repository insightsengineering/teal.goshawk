% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_gh_density_distribution_plot.R
\name{tm_g_gh_density_distribution_plot}
\alias{tm_g_gh_density_distribution_plot}
\title{Density Distribution Plot}
\usage{
tm_g_gh_density_distribution_plot(
  label,
  dataname,
  param_var,
  param,
  xaxis_var,
  trt_group,
  color_manual = NULL,
  color_comb = NULL,
  plot_height = c(500, 200, 2000),
  plot_width = NULL,
  font_size = c(12, 8, 20),
  line_size = c(1, 0.25, 3),
  hline_arb = numeric(0),
  hline_arb_color = "red",
  hline_arb_label = "Horizontal line",
  facet_ncol = 2L,
  comb_line = TRUE,
  rotate_xlab = FALSE,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{menu item label of the module in the teal app.}

\item{dataname}{analysis data passed to the data argument of teal init. E.g. ADaM structured laboratory data frame
\code{ADLB}.}

\item{param_var}{name of variable containing biomarker codes e.g. \code{PARAMCD}.}

\item{param}{biomarker selected.}

\item{xaxis_var}{name of variable containing biomarker results displayed on x-axis e.g. \code{BASE}.}

\item{trt_group}{\code{\link[teal.transform]{choices_selected}} object with available choices and pre-selected option
for variable names representing treatment group e.g. ARM.}

\item{color_manual}{vector of colors applied to treatment values.}

\item{color_comb}{name or hex value for combined treatment color.}

\item{plot_height}{controls plot height.}

\item{plot_width}{optional, controls plot width.}

\item{font_size}{font size control for title, x-axis label, y-axis label and legend.}

\item{line_size}{plot line thickness.}

\item{hline_arb}{numeric vector of at most 2 values identifying intercepts for arbitrary horizontal lines.}

\item{hline_arb_color}{a character vector of at most length of \code{hline_arb}.
naming the color for the arbitrary horizontal lines.}

\item{hline_arb_label}{a character vector of at most length of \code{hline_arb}.
naming the label for the arbitrary horizontal lines.}

\item{facet_ncol}{numeric value indicating number of facets per row.}

\item{comb_line}{display combined treatment line toggle.}

\item{rotate_xlab}{45 degree rotation of x-axis values.}

\item{pre_output}{(\code{shiny.tag}, optional)\cr
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}, optional) with text placed after the output to put the output
into context. For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}
}
\description{
This teal module renders the UI and calls the functions that create a density distribution plot
and an accompanying summary table.
}
\details{
None
}
\examples{

# Example using ADaM structure analysis dataset.

library(dplyr)
library(scda)

# original ARM value = dose value
arm_mapping <- list(
  "A: Drug X" = "150mg QD",
  "B: Placebo" = "Placebo",
  "C: Combination" = "Combination"
)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADLB <- synthetic_cdisc_data("latest")$adlb
var_labels <- lapply(ADLB, function(x) attributes(x)$label)
ADLB <- ADLB \%>\%
  mutate(
    AVISITCD = case_when(
      AVISIT == "SCREENING" ~ "SCR",
      AVISIT == "BASELINE" ~ "BL",
      grepl("WEEK", AVISIT) ~ paste("W", stringr::str_extract(AVISIT, "(?<=(WEEK ))[0-9]+")),
      TRUE ~ as.character(NA)
    ),
    AVISITCDN = case_when(
      AVISITCD == "SCR" ~ -2,
      AVISITCD == "BL" ~ 0,
      grepl("W", AVISITCD) ~ as.numeric(gsub("[^0-9]*", "", AVISITCD)),
      TRUE ~ as.numeric(NA)
    ),
    AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN),
    TRTORD = case_when(
      ARMCD == "ARM C" ~ 1,
      ARMCD == "ARM B" ~ 2,
      ARMCD == "ARM A" ~ 3
    ),
    ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
    ARM = factor(ARM) \%>\% reorder(TRTORD),
    ACTARM = as.character(arm_mapping[match(ACTARM, names(arm_mapping))]),
    ACTARM = factor(ACTARM) \%>\% reorder(TRTORD)
  )

attr(ADLB[["ARM"]], "label") <- var_labels[["ARM"]]
attr(ADLB[["ACTARM"]], "label") <- var_labels[["ACTARM"]]

app <- teal::init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    cdisc_dataset(
      "ADLB",
      ADLB,
      code = "ADLB <- synthetic_cdisc_data(\"latest\")$adlb
              var_labels <- lapply(ADLB, function(x) attributes(x)$label)
              ADLB <- ADLB \%>\%
                mutate(AVISITCD = case_when(
                    AVISIT == 'SCREENING' ~ 'SCR',
                    AVISIT == 'BASELINE' ~ 'BL',
                    grepl('WEEK', AVISIT) ~
                      paste('W', stringr::str_extract(AVISIT, '(?<=(WEEK ))[0-9]+')),
                    TRUE ~ as.character(NA)),
                  AVISITCDN = case_when(
                    AVISITCD == 'SCR' ~ -2,
                    AVISITCD == 'BL' ~ 0,
                    grepl('W', AVISITCD) ~ as.numeric(gsub('[^0-9]*', '', AVISITCD)),
                    TRUE ~ as.numeric(NA)),
                  AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN),
                  TRTORD = case_when(
                    ARMCD == 'ARM C' ~ 1,
                    ARMCD == 'ARM B' ~ 2,
                   ARMCD == 'ARM A' ~ 3),
                 ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
                 ARM = factor(ARM) \%>\% reorder(TRTORD),
                 ACTARM = as.character(arm_mapping[match(ACTARM, names(arm_mapping))]),
                 ACTARM = factor(ACTARM) \%>\% reorder(TRTORD))
               attr(ADLB[['ARM']], 'label') <- var_labels[['ARM']]
               attr(ADLB[['ACTARM']], 'label') <- var_labels[['ACTARM']]",
      vars = list(arm_mapping = arm_mapping)
    ),
    check = TRUE
  ),
  modules = modules(
    tm_g_gh_density_distribution_plot(
      label = "Density Distribution Plot",
      dataname = "ADLB",
      param_var = "PARAMCD",
      param = choices_selected(c("ALT", "CRP", "IGA"), "ALT"),
      xaxis_var = choices_selected(c("AVAL", "BASE", "CHG", "PCHG"), "AVAL"),
      trt_group = choices_selected(c("ARM", "ACTARM"), "ARM"),
      color_manual = c(
        "150mg QD" = "#000000",
        "Placebo" = "#3498DB",
        "Combination" = "#E74C3C"
      ),
      color_comb = "#39ff14",
      comb_line = TRUE,
      plot_height = c(500, 200, 2000),
      font_size = c(12, 8, 20),
      line_size = c(1, .25, 3),
      hline_arb = c(.02, .05),
      hline_arb_color = c("red", "black"),
      hline_arb_label = c("Horizontal Line A", "Horizontal Line B")
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
\author{
Nick Paszty (npaszty) paszty.nicholas@gene.com

Balazs Toth (tothb2)  toth.balazs@gene.com
}
