% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_gh_lineplot.R
\name{tm_g_gh_lineplot}
\alias{tm_g_gh_lineplot}
\title{Line plot}
\usage{
tm_g_gh_lineplot(
  label,
  dataname,
  param_var,
  param,
  param_var_label = "PARAM",
  xaxis_var,
  yaxis_var,
  xvar_level = NULL,
  filter_var = yaxis_var,
  filter_var_choices = filter_var,
  trt_group,
  trt_group_level = NULL,
  shape_choices = NULL,
  stat = "mean",
  hline = NULL,
  color_manual = NULL,
  xtick = waiver(),
  xlabel = xtick,
  rotate_xlab = FALSE,
  plot_height = c(600, 200, 2000),
  plot_width = NULL,
  font_size = c(12, 8, 20),
  dodge = c(0.4, 0, 1),
  pre_output = NULL,
  post_output = NULL,
  count_threshold = 0,
  table_font_size = c(4.5, 1, 20)
)
}
\arguments{
\item{label}{menu item label of the module in the teal app.}

\item{dataname}{analysis data passed to the data argument of teal init. E.g. ADaM structured
laboratory data frame ADLB.}

\item{param_var}{name of variable containing biomarker codes e.g. PARAMCD.}

\item{param}{biomarker selected.}

\item{param_var_label}{single name of variable in analysis data that includes parameter labels.}

\item{xaxis_var}{single name of variable in analysis data that is used as x-axis in the plot for the
respective goshawk function.}

\item{yaxis_var}{single name of variable in analysis data that is used as summary variable in the
respective gshawk function.}

\item{xvar_level}{vector that can be used to define the factor level of xvar. Only use it when
xvar is character or factor.}

\item{filter_var}{data constraint variable.}

\item{filter_var_choices}{data constraint variable choices.}

\item{trt_group}{name of variable representing treatment group e.g. ARM.}

\item{trt_group_level}{vector that can be used to define factor level of trt_group.}

\item{shape_choices}{Vector or \code{choices_selected} object with names of ADSL variables which
can be used to change shape}

\item{stat}{string of statistics}

\item{hline}{numeric value to add horizontal line to plot}

\item{color_manual}{string vector representing customized colors}

\item{xtick}{numeric vector to define the tick values of x-axis when x variable is numeric.
Default value is waive().}

\item{xlabel}{vector with same length of xtick to define the label of x-axis tick values.
Default value is waive().}

\item{rotate_xlab}{boolean value indicating whether to rotate x-axis labels.}

\item{plot_height}{controls plot height.}

\item{plot_width}{optional, controls plot width.}

\item{font_size}{control font size for title, x-axis, y-axis and legend font.}

\item{dodge}{controls the position dodge of error bar}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}

\item{count_threshold}{minimum count of observations (as listed in the output table) to plot
nodes on the graph}

\item{table_font_size}{controls the font size of values in the table}
}
\value{
\code{shiny} object
}
\description{
This teal module renders the UI and calls the function that creates a line plot.
}
\examples{

# Example using ADaM structure analysis dataset.

library(dplyr)
library(random.cdisc.data)
library(stringr)

# original ARM value = dose value
arm_mapping <- list("A: Drug X" = "150mg QD",
                    "B: Placebo" = "Placebo",
                    "C: Combination" = "Combination")

ADSL <- radsl(N = 20, seed = 1)
ADLB <- radlb(ADSL, visit_format = "WEEK", n_assessments = 7L, seed = 2)
ADLB <- ADLB \%>\%
  mutate(AVISITCD = case_when(
    AVISIT == "SCREENING" ~ "SCR",
    AVISIT == "BASELINE" ~ "BL",
    grepl("WEEK", AVISIT) ~ paste("W", stringr::str_extract(AVISIT, "(?<=(WEEK ))[0-9]+")),
    TRUE ~ as.character(NA)),
    AVISITCDN = case_when(
      AVISITCD == "SCR" ~ -2,
      AVISITCD == "BL" ~ 0,
      grepl("W", AVISITCD) ~ as.numeric(gsub("[^0-9]*", "", AVISITCD)),
      TRUE ~ as.numeric(NA)),
    AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN),
    TRTORD = case_when(
      ARMCD == "ARM C" ~ 1,
      ARMCD == "ARM B" ~ 2,
      ARMCD == "ARM A" ~ 3),
    ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
    ARM = factor(ARM) \%>\% reorder(TRTORD))

app <- teal::init(
  data = cdisc_data(
    adsl <- cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(N = 20, seed = 1)"),
    cdisc_dataset("ADLB", ADLB,
      code = "ADLB <- radlb(ADSL, visit_format = 'WEEK', n_assessments = 7L, seed = 2)
              ADLB <- ADLB \%>\%
                mutate(AVISITCD = case_when(
                    AVISIT == 'SCREENING' ~ 'SCR',
                    AVISIT == 'BASELINE' ~ 'BL',
                    grepl('WEEK', AVISIT) ~
                      paste('W', stringr::str_extract(AVISIT, '(?<=(WEEK ))[0-9]+')),
                    TRUE ~ as.character(NA)),
                  AVISITCDN = case_when(
                    AVISITCD == 'SCR' ~ -2,
                    AVISITCD == 'BL' ~ 0,
                    grepl('W', AVISITCD) ~ as.numeric(gsub('[^0-9]*', '', AVISITCD)),
                    TRUE ~ as.numeric(NA)),
                  AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN),
                  TRTORD = case_when(
                    ARMCD == 'ARM C' ~ 1,
                    ARMCD == 'ARM B' ~ 2,
                    ARMCD == 'ARM A' ~ 3),
                  ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
                  ARM = factor(ARM) \%>\% reorder(TRTORD))",
      vars = list(ADSL = adsl, arm_mapping = arm_mapping)),
    check = TRUE
    ),
  modules = root_modules(
    tm_g_gh_lineplot(
      label = "Line Plot",
      dataname = "ADLB",
       param_var = "PARAMCD",
       param = choices_selected(c("ALT", "CRP", "IGA"), "ALT"),
      shape_choices = c("SEX", "RACE"),
      xaxis_var =choices_selected("AVISITCD", "AVISITCD"),
      yaxis_var = choices_selected(c("AVAL", "BASE", "CHG", "PCHG"), "AVAL"),
      trt_group = "ARM"
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)

}
}
\author{
Wenyi Liu (luiw2) wenyi.liu@roche.com

Balazs Toth (tothb2) toth.balazs@gene.com
}
