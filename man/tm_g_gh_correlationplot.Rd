% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_gh_correlationplot.R
\name{tm_g_gh_correlationplot}
\alias{tm_g_gh_correlationplot}
\title{Scatter Plot Teal Module For Biomarker Analysis}
\usage{
tm_g_gh_correlationplot(
  label,
  dataname,
  param_var = "PARAMCD",
  xaxis_param = "ALT",
  xaxis_var = "BASE",
  yaxis_param = "CRP",
  yaxis_var = "AVAL",
  trt_group,
  color_manual = NULL,
  shape_manual = NULL,
  facet_ncol = 2,
  visit_facet = TRUE,
  facet_var = choices_selected(c("ARM", "ACTARM")),
  reg_line = FALSE,
  loq_legend = TRUE,
  rotate_xlab = FALSE,
  hline = NULL,
  vline = NULL,
  plot_height = c(500, 200, 2000),
  plot_width = NULL,
  font_size = c(12, 8, 20),
  dot_size = c(1, 1, 12),
  reg_text_size = c(3, 3, 10),
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{menu item label of the module in the teal app.}

\item{dataname}{analysis data passed to the data argument of teal init. E.g. ADaM structured laboratory data frame
\code{ADLB}.}

\item{param_var}{name of variable containing biomarker codes e.g. \code{PARAMCD}.}

\item{xaxis_param}{biomarker selected for x-axis.}

\item{xaxis_var}{name of variable containing biomarker results displayed on x-axis e.g. \code{BASE}.}

\item{yaxis_param}{biomarker selected for y-axis.}

\item{yaxis_var}{name of variable containing biomarker results displayed on y-axis e.g. \code{AVAL}.}

\item{trt_group}{\code{\link[teal]{choices_selected}} object with available choices and pre-selected option
for variable names representing treatment group e.g. ARM.}

\item{color_manual}{vector of colors applied to treatment values.}

\item{shape_manual}{vector of symbols applied to LOQ values.}

\item{facet_ncol}{numeric value indicating number of facets per row.}

\item{visit_facet}{visit facet toggle.}

\item{facet_var}{variable to use for treatment facetting.}

\item{reg_line}{include regression line and annotations for slope and coefficient in visualization. Use with facet
TRUE.}

\item{loq_legend}{loq legend toggle.}

\item{rotate_xlab}{45 degree rotation of x-axis values.}

\item{hline}{y-axis value to position of horizontal line.}

\item{vline}{x-axis value to position a vertical line.}

\item{plot_height}{controls plot height.}

\item{plot_width}{optional, controls plot width.}

\item{font_size}{font size control for title, x-axis label, y-axis label and legend.}

\item{dot_size}{plot dot size.}

\item{reg_text_size}{font size control for regression line annotations.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\description{
Scatter Plot Teal Module For Biomarker Analysis
}
\examples{

# Example using ADaM structure analysis dataset.

library(dplyr)
library(random.cdisc.data)

# original ARM value = dose value
arm_mapping <- list("A: Drug X" = "Drug X 100mg",
                    "B: Placebo" = "Placebo",
                    "C: Combination" = "Combination 100mg"
)

ADSL <- radsl(cached = TRUE)
ADLB <- radlb(cached = TRUE)
var_labels <- lapply(ADLB, function(x) attributes(x)$label)
ADLB <- ADLB \%>\%
  mutate(AVISITCD = case_when(
      AVISIT == "SCREENING" ~ "SCR",
      AVISIT == "BASELINE" ~ "BL",
      grepl("WEEK", AVISIT) ~ paste("W", stringr::str_extract(AVISIT, "(?<=(WEEK ))[0-9]+")),
      TRUE ~ as.character(NA)),
    AVISITCDN = case_when(
      AVISITCD == "SCR" ~ -2,
      AVISITCD == "BL" ~ 0,
      grepl("W", AVISITCD) ~ as.numeric(gsub("[^0-9]*", "", AVISITCD)),
      TRUE ~ as.numeric(NA)),
    AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN),
    TRTORD = case_when(
      ARMCD == "ARM C" ~ 1,
      ARMCD == "ARM B" ~ 2,
      ARMCD == "ARM A" ~ 3),
    ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
    ARM = factor(ARM) \%>\% reorder(TRTORD),
    ACTARM = as.character(arm_mapping[match(ACTARM, names(arm_mapping))]),
    ACTARM = factor(ACTARM) \%>\% reorder(TRTORD))
attr(ADLB[["ARM"]], "label") <- var_labels[["ARM"]]
attr(ADLB[["ACTARM"]], 'label') <- var_labels[["ACTARM"]]

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- radsl(cached = TRUE)"),
    cdisc_dataset(
      "ADLB",
      ADLB,
      code = "ADLB <- radlb(cached = TRUE)
              var_labels <- lapply(ADLB, function(x) attributes(x)$label)
              ADLB <- ADLB \%>\%
                mutate(AVISITCD = case_when(
                    AVISIT == 'SCREENING' ~ 'SCR',
                    AVISIT == 'BASELINE' ~ 'BL',
                    grepl('WEEK', AVISIT) ~
                      paste('W', stringr::str_extract(AVISIT, '(?<=(WEEK ))[0-9]+')),
                    TRUE ~ as.character(NA)),
                  AVISITCDN = case_when(
                    AVISITCD == 'SCR' ~ -2,
                    AVISITCD == 'BL' ~ 0,
                    grepl('W', AVISITCD) ~ as.numeric(gsub('[^0-9]*', '', AVISITCD)),
                    TRUE ~ as.numeric(NA)),
                  AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN),
                  TRTORD = case_when(
                    ARMCD == 'ARM C' ~ 1,
                    ARMCD == 'ARM B' ~ 2,
                    ARMCD == 'ARM A' ~ 3),
                  ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))]),
                  ARM = factor(ARM) \%>\% reorder(TRTORD),
                  ACTARM = as.character(arm_mapping[match(ACTARM, names(arm_mapping))]),
                  ACTARM = factor(ACTARM) \%>\% reorder(TRTORD))
               attr(ADLB[['ARM']], 'label') <- var_labels[['ARM']]
               attr(ADLB[['ACTARM']], 'label') <- var_labels[['ACTARM']]",
      vars = list(arm_mapping = arm_mapping)),
    check = TRUE
    ),
  modules = root_modules(
    tm_g_gh_correlationplot(
       label = "Correlation Plot",
       dataname = "ADLB",
       param_var = "PARAMCD",
       xaxis_param = choices_selected(c("ALT", "CRP", "IGA"), "ALT"),
       yaxis_param = choices_selected(c("ALT", "CRP", "IGA"), "CRP"),
       xaxis_var = choices_selected(c("AVAL", "BASE", "CHG", "PCHG"), "BASE"),
       yaxis_var = choices_selected(c("AVAL", "BASE", "CHG", "PCHG"), "AVAL"),
       trt_group = choices_selected(c("ARM", "ACTARM"), "ARM"),
       color_manual = c("Drug X 100mg" = "#000000",
                        "Placebo" = "#3498DB",
                        "Combination 100mg" = "#E74C3C"),
       shape_manual = c("N"  = 1, "Y"  = 2, "NA" = 0),
       plot_height = c(500, 200, 2000),
       facet_ncol = 2,
       visit_facet = TRUE,
       reg_line = FALSE,
       loq_legend = TRUE,
       font_size = c(12, 8, 20),
       dot_size = c(1, 1, 12),
       reg_text_size = c(3, 3, 10)
   )
  )
)

\dontrun{
shinyApp(app$ui, app$server)

}
}
\author{
Nick Paszty (npaszty) paszty.nicholas@gene.com

Balazs Toth (tothb2)  toth.balazs@gene.com
}
